```{r message = FALSE}
library(ggplot2)
library(dplyr)
library(tree)
library(rpart.plot)
library(gbm)
library(randomForest)
library(caTools)

```

### Load the data
```{r}
setwd("C:/Users/neder/OneDrive/Documents/BIOL 432/BIOL432_FinalProject")

Dat <- read.csv("data.csv")
```

# Lets just use CL bc CH sucks
```{r}
# Checking distribution of data
hist(Dat$Average_CL_Seed_Mass)
```

Remove CH column:
```{r}
Dat2 <- Dat %>%
  select(-c(Plot_Number, Average_CH_Seed_Mass, Date_of_First_CH_Flower))
```

Checking summary stats for the average CH seed mass:
```{r}
summary(Dat2$Average_CL_Seed_Mass)
```

Remove all rows with NA's (to exclude the 59 NAs in the seed mass volume)
```{r}
Dat3 <- Dat2[complete.cases(Dat2$Average_CL_Seed_Mass), ]
```

Summary to see new mean of CL seed mass (after NAs removed)
```{r}
summary(Dat3$Average_CL_Seed_Mass)
```

Make Average CL seed mass into a binary response variable (mean and above = Success, below = Dead)
```{r}
Dat3$Binary_Avg_Seed_Mass <- ifelse(Dat3$Average_CL_Seed_Mass > mean(Dat3$Average_CL_Seed_Mass), "Success", "Dead")
Dat3$Binary_Avg_Seed_Mass <- as.factor(Dat3$Binary_Avg_Seed_Mass)
```

Remove Average CL Seed Mass Column
```{r}
TreeDat <- Dat3 %>%
  select(-c(Average_CL_Seed_Mass))
TDat <- TreeDat %>%
  mutate(Treatment = as.factor(Treatment),
         Robbing = as.factor(Robbing), 
         Florivory = as.factor(Florivory),
         Pollination = as.factor(Pollination))
```

```{r}
# Split the processed_data dataframe into training and test sets using a 70/30 split ratio
split <- sample.split(TDat$Binary_Avg_Seed_Mass, SplitRatio = 0.7)
train <- TDat[split,]
test <- TDat[!split,]
```

Make the tree
```{r}
# Build the decision tree model
SeedMassTree <- rpart(Binary_Avg_Seed_Mass ~ ., data = train, method = "class")
# Plot the decision tree
rpart.plot(SeedMassTree, fallen.leaves = TRUE)

```

```{r}
seed_mass_predictions <- predict(SeedMassTree, newdata = test, type = "class")
```

Quality Analysis

Confusion matrix identifying performance of model
```{r}
confusion_matrix <- table(test$Binary_Avg_Seed_Mass, seed_mass_predictions)
confusion_matrix
```
Model Accuracy
```{r}
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
accuracy
```

Calculate the sensitivity and specificity of the model
```{r}
sensitivity <- confusion_matrix[1,1] / sum(confusion_matrix[1,])
specificity <- confusion_matrix[2,2] / sum(confusion_matrix[2,])
sensitivity
specificity
```

Calculate the area under the receiver operating characteristic (ROC) curve
```{r}
library(pROC)
roc_obj <- roc(test$Binary_Avg_Seed_Mass, as.numeric(seed_mass_predictions)-1)
auc(roc_obj)
```
Conclusion: Some predictive power
